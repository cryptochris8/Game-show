MASTER PROMPT — “Clueboard” (Jeopardy-style Trivia for HYTOPIA)

You are my senior HYTOPIA SDK engineer. Build a production-ready, server-authoritative multiplayer trivia game in TypeScript called Clueboard (Jeopardy-style, but generic). Follow every instruction exactly; write complete code (no TODOs).

Use HYTOPIA docs for features you need: Overlay UI (load HTML/CSS HUDs), Scene UIs (optional podium labels), Players/PlayerManager, Persisted Player Data (per-player stats), Persisted Data (global leaderboards), Getting Started (project bootstrap), and Mobile (touch UI sizing). 
dev.hytopia.com
+7
dev.hytopia.com
+7
dev.hytopia.com
+7

0) Scope & Rules

Players: 2–6 per lobby. One optional Host role; if none, game autohosts.

Board: 6 categories × 5 values (100–500). Click → reveal clue modal.

Buzz: After reveal, 300ms lockout, then buzz window (e.g., 3s). First valid buzz wins attempt; others locked until resolved.

Answers: Text input; normalized check (case-insensitive, strip punctuation/articles, accept “what is / who is / where is …”). Wrong: −value and player locked for that clue; continue buzz window or reveal answer if time expires.

Daily Double: 1–2 per board. Only picker answers; wager up to max(value, player score).

Final Round: All can wager, then submit private answers → reveal & score.

Scoring: Standard Jeopardy-style adds/subtracts.

Persistence: Per-player lifetime stats (games, wins, correct%, avg buzz ms, best streak). Global leaderboards (most wins, highest single-game).

Naming/IP: Use generic name Clueboard; do not use Jeopardy! branding, logos, or copyrighted SFX.

1) Project Setup (automate)

If no project exists, init HYTOPIA project and scripts:

hytopia init → TypeScript template; add dev, build, start, package.

Run dev server: hytopia start. Open via HYTOPIA Play client. 
dev.hytopia.com

Create folders:

assets/
  packs/trivia_pack.json
  ui/overlay.html
  ui/overlay.css
  audio/ding.mp3 audio/buzz.mp3 audio/timer.mp3
src/
  index.ts
  game/GameManager.ts        # server state machine
  game/RoundManager.ts       # board rounds, daily doubles, final
  game/BuzzManager.ts        # lockout/buzz timing, anti-spam
  game/PackLoader.ts         # load & validate question packs
  game/ScoreManager.ts       # scoring + persistence hooks
  game/Normalize.ts          # answer normalization utils
  ui/Overlay.ts              # loads Overlay UI; DOM events bridge
  net/Events.ts              # typed channels & payloads
  util/Persistence.ts        # persisted player + global data
  util/PlayerUtil.ts         # PlayerManager helpers

2) Data Model

Question pack JSON:

{
  "packId": "demo-clueboard-001",
  "title": "General Knowledge Demo Pack",
  "categories": [
    { "name": "SPORTS", "clues": [ { "value": 100, "clue": "...", "answer": "..." }, "... x5" ] },
    "... x6 categories"
  ],
  "dailyDoubles": [ { "category": 1, "index": 3 } ],
  "finalRound": { "category": "WORLD FLAGS", "clue": "...", "answer": "..." }
}


Server room state (example): { phase, board, usedCells, currentClue, lockout, buzzQueue, pickerId, wagers, scores }

3) Networking (authoritative)

Create net/Events.ts with typed server→client and client→server channels:

GAME_STATE (server→clients): full snapshot (phase, board, used cells, scores, timers).

SELECT_CELL (client→server: host or current picker).

CLUE_REVEAL (server→clients): clue text/category/value; start lockout → buzz window.

BUZZ (client→server): with clientTs; server validates window and de-dupes by earliest serverTs.

ANSWER_SUBMIT (client→server): text; server normalizes and judges (exact/partial).

JUDGE (server→clients): correct/incorrect, score delta, next flow.

DAILY_DOUBLE_WAGER (client→server) / FINAL_WAGER (client→server).

FINAL_REVEAL (server→clients): show answers & scoring order.

Use PlayerManager to address all connected players. 
dev.hytopia.com

4) UI (Overlay UI)

Build all HUD/board in assets/ui/overlay.html + overlay.css. Load per-player with player.ui.load(htmlPath) from server. Map DOM IDs:

Board grid: #board (insert 6 headers + 5×6 buttons).

Clue modal: #clueModal, #clueText, #buzzBtn, #answerInput, #submitAnswer.

Timer/host message: #timer, #hostMsg.

Scores: #scorePanel (cards with player name & score).

Use Overlay UI (global, screen-space) for board, timers, dialogs. Optionally Scene UIs as podium nameplates. 
dev.hytopia.com
+2
dev.hytopia.com
+2

Mobile layout: larger hit targets, stacked grid on narrow screens per HYTOPIA Mobile guide. 
dev.hytopia.com

5) Systems (behavior)
GameManager.ts

Phases: LOBBY → ROUND1 → ROUND2 → FINAL → RESULTS.

On start: load pack via PackLoader; seed Daily Double cells; choose first picker randomly; broadcast GAME_STATE.

Handle SELECT_CELL (only picker/host). Mark used; call RoundManager.revealClue.

RoundManager.ts

revealClue(cell): emit CLUE_REVEAL; start 300ms lockout → open buzz window; arm 10–12s clue timer.

On Daily Double: prompt wager; only picker answers; skip buzz flow.

Final Round: gather wagers, reveal, gather answers privately, score/reveal in order.

BuzzManager.ts

On CLUE_REVEAL: lockoutUntil = now+300ms.

BUZZ: accept first with now >= lockoutUntil and now <= windowEnd. Keep anti-spam cooldown per player (e.g., 600ms).

Expose currentResponderId.

Normalize.ts

Normalization steps: lowercase, strip punctuation, collapse whitespace, trim leading articles (“a”, “an”, “the”), allow variants of “what/who/where is/are”.

Fuzzy threshold (optional): Levenshtein distance ≤ 1 for typos.

ScoreManager.ts

applyCorrect(playerId, value) and applyIncorrect(playerId, value); for DD/Final use wager.

Track per-clue deltas for later results screen.

PackLoader.ts

Validate pack schema: 6×5 clues min, required fields, no duplicate values per category, DD indices valid. Provide error messages.

util/Persistence.ts

Per-player data (Persisted Player Data): merge on session end { games, wins, correctPct, avgBuzzMs, maxStreak }. 
dev.hytopia.com

Global boards (Persisted Data):

leaderboard:mostWins, leaderboard:highScoreSingleGame (top 100). 
dev.hytopia.com

6) Security & Fair Play

All judging & scoring is server-side.

Clients may suggest timestamps; server decides winners by authoritative time.

Lock text input during lockout; prevent multiple submissions per player per clue.

Rate-limit buzz packets (e.g., 3/sec).

7) Audio/Feedback

On reveal: play audio/timer.mp3; on first buzz: audio/buzz.mp3; on correct: audio/ding.mp3. (Use generic SFX.)

8) Mobile UX

Big Buzz! button; on-screen keyboard safe area for answer input; responsive board (3 columns on phones). 
dev.hytopia.com

9) Acceptance Criteria

Lobby → R1 → R2 → Final → Results works with 2–6 players.

Buzz lockout & window enforced; first correct gets points; wrong deducts and locks player for that clue.

Daily Double & Final wagers resolve correctly.

Per-player stats persist; global leaderboards update.

Overlay UI is loaded via player.ui.load(); mobile layout readable. 
dev.hytopia.com

10) Developer Notes

Use PlayerManager to broadcast / iterate players. 
dev.hytopia.com

In index.ts, load overlay for each player on join and wire DOM events to net events.

Add small unit tests for Normalize.ts.

When done, print a short summary of the created files, and example commands to run: hytopia start (dev) and hytopia package (publish). 
dev.hytopia.com

Minimal starter trivia_pack.json (paste into assets/packs/trivia_pack.json)
{
  "packId": "demo-clueboard-001",
  "title": "General Knowledge Demo Pack",
  "categories": [
    {
      "name": "SPORTS",
      "clues": [
        { "value": 100, "clue": "This sport uses a dimpled ball and 18-hole courses.", "answer": "What is golf?" },
        { "value": 200, "clue": "In soccer, this player can use their hands inside the penalty area.", "answer": "Who is the goalkeeper?" },
        { "value": 300, "clue": "The NBA team from Chicago is called this.", "answer": "What are the Bulls?" },
        { "value": 400, "clue": "This tennis event is played on grass courts in London.", "answer": "What is Wimbledon?" },
        { "value": 500, "clue": "He has the most men’s Grand Slam singles titles as of 2025.", "answer": "Who is Novak Djokovic?" }
      ]
    },
    {
      "name": "SCIENCE",
      "clues": [
        { "value": 100, "clue": "H2O is better known as this.", "answer": "What is water?" },
        { "value": 200, "clue": "This planet is known as the Red Planet.", "answer": "What is Mars?" },
        { "value": 300, "clue": "The speed of light is approximately 3.0 × 10^8 in these units.", "answer": "What are meters per second?" },
        { "value": 400, "clue": "DNA stands for deoxyribonucleic this.", "answer": "What is acid?" },
        { "value": 500, "clue": "This scientist proposed the laws of motion and universal gravitation.", "answer": "Who is Isaac Newton?" }
      ]
    },
    {
      "name": "MOVIES",
      "clues": [
        { "value": 100, "clue": "This galaxy far, far away franchise features Jedi and Sith.", "answer": "What is Star Wars?" },
        { "value": 200, "clue": "He directed 'Jurassic Park' and 'E.T.'.", "answer": "Who is Steven Spielberg?" },
        { "value": 300, "clue": "This 1997 ship-sinking epic starred Leonardo DiCaprio and Kate Winslet.", "answer": "What is Titanic?" },
        { "value": 400, "clue": "The Marvel hero also known as T'Challa is this feline monarch.", "answer": "Who is Black Panther?" },
        { "value": 500, "clue": "This director is known for mind-bending films like 'Inception' and 'Tenet'.", "answer": "Who is Christopher Nolan?" }
      ]
    },
    {
      "name": "GEOGRAPHY",
      "clues": [
        { "value": 100, "clue": "This is the largest country in the world by area.", "answer": "What is Russia?" },
        { "value": 200, "clue": "The Nile River flows primarily through this continent.", "answer": "What is Africa?" },
        { "value": 300, "clue": "This U.S. state is known as the Sunshine State.", "answer": "What is Florida?" },
        { "value": 400, "clue": "Mount Everest sits on the border of Nepal and this country.", "answer": "What is China?" },
        { "value": 500, "clue": "This desert in northern Africa is the world’s largest hot desert.", "answer": "What is the Sahara?" }
      ]
    },
    {
      "name": "HISTORY",
      "clues": [
        { "value": 100, "clue": "He was the first President of the United States.", "answer": "Who is George Washington?" },
        { "value": 200, "clue": "This wall dividing Berlin fell in 1989.", "answer": "What is the Berlin Wall?" },
        { "value": 300, "clue": "This U.S. document begins with 'We the People'.", "answer": "What is the Constitution?" },
        { "value": 400, "clue": "The Renaissance began on this European peninsula.", "answer": "What is the Italian Peninsula?" },
        { "value": 500, "clue": "This empire was ruled by Genghis Khan and later Kublai Khan.", "answer": "What is the Mongol Empire?" }
      ]
    },
    {
      "name": "POP CULTURE",
      "clues": [
        { "value": 100, "clue": "This social app is known for short-form videos and viral dances.", "answer": "What is TikTok?" },
        { "value": 200, "clue": "This streaming platform’s 'Stranger Things' became a cultural phenomenon.", "answer": "What is Netflix?" },
        { "value": 300, "clue": "BTS is a mega-popular group from this country.", "answer": "What is South Korea?" },
        { "value": 400, "clue": "He’s the entrepreneur behind SpaceX and Tesla.", "answer": "Who is Elon Musk?" },
        { "value": 500, "clue": "This phrase describes fans hunting for references across a connected film universe.", "answer": "What are Easter eggs?" }
      ]
    }
  ],
  "dailyDoubles": [ { "category": 1, "index": 3 }, { "category": 4, "index": 2 } ],
  "finalRound": { "category": "WORLD FLAGS", "clue": "This country’s flag features a red maple leaf.", "answer": "What is Canada?" }
}

Tiny wiring hints (so the AI uses the right APIs)

Load Overlay UI for each player when they join (server-side): “Overlay UI is loaded into an absolutely positioned <div> on top of the game scene … defined in the .html you pass to player.ui.load().” 
dev.hytopia.com

Use PlayerManager to iterate connected players, broadcast state, and find the current picker. 
dev.hytopia.com

Store per-player lifetime stats with Persisted Player Data (e.g., player.setPersistedData({...})). 
dev.hytopia.com

Store global leaderboards with the generic Persisted Data KV store. 
dev.hytopia.com

Keep the whole experience crisp on phones by following the HYTOPIA Mobile sizing guidance (bigger hit targets, responsive grid). 
dev.hytopia.com

If you want, I can also drop in a ready-made overlay.html/overlay.css and audio placeholders, plus TypeScript stubs for GameManager, BuzzManager, and the DOM bridge in Overlay.ts in your preferred structure.